<?php

namespace App\Http\Controllers\Api;

use fullMstr;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

class MasterController extends Controller
{
    /**
     * Get a listing of the singleMstr.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function index(Request $request)
    {
        $singleMstrQuery = Master::query();
        $singleMstrQuery->where('title', 'like', '%'.$request->get('q').'%');
        $singleMstrQuery->orderBy('title');
        $mstrCollections = $singleMstrQuery->paginate(25);

        return $mstrCollections;
    }

    /**
     * Store a newly created singleMstr in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(Request $request)
    {
        $this->authorize('create', new Master);

        $newMaster = $request->validate([
            'title'       => 'required|max:60',
            'description' => 'nullable|max:255',
        ]);
        $newMaster['creator_id'] = auth()->id();

        $singleMstr = Master::create($newMaster);

        return response()->json([
            'message' => __('master.created'),
            'data'    => $singleMstr,
        ], 201);
    }

    /**
     * Get the specified singleMstr.
     *
     * @param  \fullMstr  $singleMstr
     * @return \Illuminate\Http\JsonResponse
     */
    public function show(Master $singleMstr)
    {
        return $singleMstr;
    }

    /**
     * Update the specified singleMstr in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \fullMstr  $singleMstr
     * @return \Illuminate\Http\JsonResponse
     */
    public function update(Request $request, Master $singleMstr)
    {
        $this->authorize('update', $singleMstr);

        $singleMstrData = $request->validate([
            'title'       => 'required|max:60',
            'description' => 'nullable|max:255',
        ]);
        $singleMstr->update($singleMstrData);

        return response()->json([
            'message' => __('master.updated'),
            'data'    => $singleMstr,
        ]);
    }

    /**
     * Remove the specified singleMstr from storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \fullMstr  $singleMstr
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(Request $request, Master $singleMstr)
    {
        $this->authorize('delete', $singleMstr);

        $request->validate(['master_id' => 'required']);

        if ($request->get('master_id') == $singleMstr->id && $singleMstr->delete()) {
            return response()->json(['message' => __('master.deleted')]);
        }

        return response()->json('Unprocessable Entity.', 422);
    }
}
